steps:
  - name: "gcr.io/cloud-builders/git"
    args: ["clone", "https://github.com/Dokbawi/discord-video-helm.git"]

  - name: gcr.io/cloud-builders/gcloud
    entrypoint: "bash"
    args:
      - "-c"
      - |
        mkdir -p env
        gcloud secrets versions access latest --secret="rabbitmq-password" > env/rabbitmq-password

  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "container",
        "clusters",
        "get-credentials",
        "${_CLUSTER_NAME}",
        "--region=${_CLUSTER_LOCATION}",
        "--project=directed-strata-447305-p6",
      ]

  - name: gcr.io/cloud-builders/kubectl
    entrypoint: bash
    args:
      - "-c"
      - |
        if ! kubectl get namespace discord-video-app >/dev/null 2>&1; then
          kubectl create namespace discord-video-app
        else
          echo "Namespace 'discord-video-app' already exists. Skipping creation."
        fi

  - name: "gcr.io/cloud-builders/helm"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        cd discord-video-helm

        # 환경변수 설정
        export RABBITMQ_PASSWORD=$(cat ../env/rabbitmq-password)
        export DISCORD_BOT_TAG="${_DISCORD_BOT_TAG}"
        export WINTER_CAT_TAG="${_WINTER_CAT_TAG}"
        export CODEX_MEDIA_TAG="${_CODEX_MEDIA_TAG}"
        export NAMESPACE="prod"
        export RELEASE_NAME="discord-video"

        # 스크립트 실행 권한 부여 및 실행
        chmod +x deploy.sh
        ./deploy.sh

  - name: "gcr.io/cloud-builders/kubectl"
    args: ["get", "pods", "-n", "prod"]

  - name: "gcr.io/cloud-builders/kubectl"
    args: ["get", "services", "-n", "prod"]

substitutions:
  _CLUSTER_NAME: "discord-bot-app-k8s"
  _CLUSTER_LOCATION: "asia-northeast3"
  _DISCORD_BOT_TAG: "latest"
  _WINTER_CAT_TAG: "latest"
  _CODEX_MEDIA_TAG: "latest"

options:
  logging: CLOUD_LOGGING_ONLY
